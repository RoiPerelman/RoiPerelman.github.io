{"data":{"markdownRemark":{"html":"<h1>Roi's DockerSheet</h1>\n<h2>docker client</h2>\n<ul>\n<li>docker start <code>[instance name]</code></li>\n<li>docker stop <code>[instance name]</code></li>\n<li>docker rm <code>[instance name]</code></li>\n<li>\n<p>docker run --name <code>[instance name]</code> `[image name]</p>\n<ul>\n<li>-v <code>[local path]:[instance path]</code>. volumes</li>\n<li>-p <code>[local port]:[instance port]</code>. ports</li>\n<li>--rm [docker stop + docker rm on instance]</li>\n<li>-d [run as daemon in the background, deteched mode]</li>\n</ul>\n</li>\n<li>docker images</li>\n<li>\n<p>docker ps [process status]</p>\n<ul>\n<li>-a [all]</li>\n<li>-p [process id]</li>\n</ul>\n</li>\n<li>docker rmi [remove image]</li>\n</ul>\n<p><em>docker stop (docker ps -a -q)</em></p>\n<p><em>docker rm (docker ps -a -q)</em></p>\n<p><em>docker inspect --format '{{ .NetworkSettings.IPAddress }}' (docker ps -q)</em></p>\n<h2>Dockerfile</h2>\n<ul>\n<li>docker build -t <code>[image name]</code> -f <code>[Dockerfile name]</code> <code>[relative path]</code></li>\n</ul>\n<p>dockerfile example:</p>\n<pre><code class=\"language-ruby\">From ruby:1.9.3\n\nRUN apt-get update -qq &#x26;&#x26; apt-get install -y build-essential nodejs npm nodejs-legacy mysql-client vim\n\nWORKDIR /tmp\n# add is like copy, only untars and can handle URL's\nADD Gemfile Gemfile\nCOPY Gemfile.lock Gemfile.lock\nRUN bundle install\n\nEXPOSE 3000\n\nCMD [\"rails\",\"server\"]\n</code></pre>\n<h2>docker-compose</h2>\n<ul>\n<li>docker-compose -f [yml file path] up -d</li>\n<li>docker-compose down</li>\n</ul>\n<pre><code class=\"language-yml\">version: '2'\nservices:\n  db:\n    image: library/mysql:5.6.22\n    volumes:\n      - /Users/roiperelman/work/docker-persistent-storage/mysql:/var/lib/mysql\n    expose:\n      - 3306\n    ports:\n      - '3306:3306'\n    env_file:\n      - 'docker.env'\n  web:\n    build: .\n    command: ../docker-start.sh\n    ports:\n      - '3333:3000'\n    env_file:\n      - 'docker.env'\n    # links:\n    #   - db\n</code></pre>\n<h2>fast dockers</h2>\n<h3>nginx</h3>\n<pre><code class=\"language-ruby\">docker-compose -f /Users/roiperelman/Work/docker/nginx/nginx-compose.yml up -d\ndocker-compose -f /Users/roiperelman/Work/docker/nginx/nginx-compose.yml down\n</code></pre>\n<h3>mysql (adm client password is root -e MYSQL<em>ROOT</em>PASSWORD=root)</h3>\n<pre><code class=\"language-ruby\">docker run --name mysql-server -p 3306:3306 -v /Users/roiperelman/Work/docker/mysql/data:/var/lib/mysql --env-file '/Users/roiperelman/Work/adm-redesign/docker.env' -d mysql:5.6.22\ndocker run -it --link mysql-server:mysql --rm mysql:5.6.22 bash -c 'exec mysql -h\"$MYSQL_PORT_3306_TCP_ADDR\" -P\"$MYSQL_PORT_3306_TCP_PORT\" -u root -p\"$MYSQL_ENV_MYSQL_ROOT_PASSWORD\"'\n</code></pre>\n<h3>phpMyAdmin</h3>\n<p><code>docker run --name phpMyAdmin -d --link mysql-server:db -p 9001:80 phpmyadmin/phpmyadmin</code></p>\n<h3>redis</h3>\n<p><code>docker run --name redis-server -p 6379:6379 -v /Users/roiperelman/Work/docker/redis/data:/data -v /Users/roiperelman/Work/docker/redis/redis.conf:/usr/local/etc/redis/redis.conf -d redis redis-server /usr/local/etc/redis/redis.conf --appendonly yes</code></p>\n<h3>elasticsearch (<code>-v $PWD/config\":/usr/share/elasticsearch/config</code>)</h3>\n<p><code>docker run --name elasticsearch -p 9200:9200 -v /Users/roiperelman/Work/docker/elasticsearch/data:/usr/share/elasticsearch/data -d elasticsearch1.4.3 bash -c 'exec elasticsearch'</code></p>\n<h3>DY-Admin</h3>\n<p><code>docker run --name dy-admin --link mysql-server:db --link redis-server:redis -p 3333:3000 --env-file '/Users/roiperelman/Work/adm-redesign/docker.env' -d dy-admin</code></p>\n<h3>elasticsearch (1.6.2 for datafeeds)</h3>\n<p><code>docker run --name elasticsearch-1.6.2 -p 9200:9200 -p 9300:9300 -v /Users/roiperelman/Work/docker/elasticsearch-1.6.2/data:/usr/share/elasticsearch/data -d library/elasticsearch:1.6.2</code></p>","frontmatter":{"path":"/cheatsheet/DockerSheet","title":"DockerSheet"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}